{
  "stats": {
    "suites": 3,
    "tests": 20,
    "passes": 20,
    "pending": 0,
    "failures": 0,
    "start": "2020-04-06T12:06:04.270Z",
    "end": "2020-04-06T12:06:10.303Z",
    "duration": 6033,
    "testsRegistered": 20,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "16e874b7-dcd0-4145-a736-1af130502850",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
          "title": "func",
          "fullFile": "E:\\code\\js-util-func\\test\\fun.test.js",
          "file": "\\test\\fun.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "计时器-浏览器进程切后台后，去除进程暂停时间 watchTimeInterval",
              "fullTitle": "func 计时器-浏览器进程切后台后，去除进程暂停时间 watchTimeInterval",
              "timedOut": false,
              "duration": 6005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let i = 0\nUtils.watchTimeInterval(5, 1000, () => {\n    i++\n}, () => {\n    expect(i).to.be.within(3, 4)\n    done()\n})\nsetTimeout(() => {\n    let time = new Date().getTime();\n    for (; ;) {\n        let current = new Date().getTime()\n        if (current - time > 2 * 1000) {\n            break;\n        }\n    }\n}, 1000)",
              "err": {},
              "uuid": "a4b230bc-9392-4d1b-bb03-2ec98e333ee0",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "获取链接的参数，返回对象格式 searchParams",
              "fullTitle": "func 获取链接的参数，返回对象格式 searchParams",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.searchParams(\"?q=js&qs=n\")).to.deep.equal({ q: 'js', qs: 'n' })\ndone()",
              "err": {},
              "uuid": "8e9e6231-01dd-4411-9304-67f9e21466d2",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "判断是否是空对象 isEmptyObject",
              "fullTitle": "func 判断是否是空对象 isEmptyObject",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.isEmptyObject({})).to.be.true\nexpect(Utils.isEmptyObject({ name: 'x' })).to.be.false\nexpect(Utils.isEmptyObject(123)).to.be.false\nexpect(Utils.isEmptyObject(true)).to.be.false\nexpect(Utils.isEmptyObject('string')).to.be.false\nexpect(Utils.isEmptyObject(null)).to.be.false\nexpect(Utils.isEmptyObject(undefined)).to.be.false\ndone()",
              "err": {},
              "uuid": "2336770d-9a9b-4ef2-b992-595c6d16ddc4",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "将对象中的值为空字符串、null、undefined 的值过滤掉 filterEmptyVal",
              "fullTitle": "func 将对象中的值为空字符串、null、undefined 的值过滤掉 filterEmptyVal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let before = {\n    name: 'xxx',\n    age: 0,\n    sex: false,\n    a: '',\n    b: null,\n    c: undefined,\n    f: {\n        name: '333',\n        d: ''\n    }\n}\nlet after = {\n    name: 'xxx',\n    age: 0,\n    sex: false,\n    f: {\n        name: '333',\n    }\n}\nexpect(Utils.filterEmptyVal(before)).to.deep.equal(after)\ndone()",
              "err": {},
              "uuid": "59b0fe8d-8a97-411c-a277-a97e878d8c69",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "将对象的 key 和 value 通过连接符拼接成字符串 deepMakeObjToStr",
              "fullTitle": "func 将对象的 key 和 value 通过连接符拼接成字符串 deepMakeObjToStr",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n    name: 'xxx',\n    age: 10,\n    sex: true,\n    list: [\n        { a: 'atext', b: 12, c: false, d: [1, 2, 3, 4, 5, { last: 'last-text', list: [99, 88] }] },\n        { a: 'atext', b: 12, c: false, d: [1, 2, 3, 4, 5, { last: 'last-text', list: [99, 88] }] },\n        { a: { a: { a: 'last-a' } } }\n    ]\n}\nlet objStr = 'name=xxx&age=10&sex=true&list=0=a=atext&b=12&c=false&d=0=1&1=2&2=3&3=4&4=5&5=last=last-text&list=0=99&1=88&1=a=atext&b=12&c=false&d=0=1&1=2&2=3&3=4&4=5&5=last=last-text&list=0=99&1=88&2=a=a=a=last-a&'\nexpect(Utils.deepMakeObjToStr(obj)).to.be.equal(objStr)\nexpect(Utils.deepMakeObjToStr(null)).to.be.equal(null)\nexpect(Utils.deepMakeObjToStr(true)).to.be.equal(true)\nexpect(Utils.deepMakeObjToStr('true')).to.be.equal('true')\ndone()",
              "err": {},
              "uuid": "313b6139-c39c-4670-b70d-f256d67ae003",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "将秒数转换成  {day,hour,minute,second} 对象 secondToTime",
              "fullTitle": "func 将秒数转换成  {day,hour,minute,second} 对象 secondToTime",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.secondToTime(59)).to.deep.equal({day: 0, hour: 0, minute: 0, second: 59})\nexpect(Utils.secondToTime(60)).to.deep.equal({day: 0, hour: 0, minute: 1, second: 0})\nexpect(Utils.secondToTime(61)).to.deep.equal({day: 0, hour: 0, minute: 1, second: 1})\nexpect(Utils.secondToTime(60 * 60)).to.deep.equal({day: 0, hour: 1, minute: 0, second: 0})\nexpect(Utils.secondToTime(60 * 60 + 1)).to.deep.equal({day: 0, hour: 1, minute: 0, second: 1})\nexpect(Utils.secondToTime(60 * 60 * 24 + 1)).to.deep.equal({day: 1, hour: 0, minute: 0, second: 1})\ndone()",
              "err": {},
              "uuid": "d89a4e6a-6ec7-49df-a36e-dd3af6139648",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "比较两个对象是否相等 isEqual",
              "fullTitle": "func 比较两个对象是否相等 isEqual",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n    name:'xxx',\n    age:0,\n    sex:false,\n    a:'',\n    b:null,\n    c:undefined,\n    f:{\n        name:'333',\n        d:''\n    },\n    list:[\n        {name:'xx',list:[0,1,2]},\n        false,\n        123\n    ]\n}\nlet obj1 = {\n    name:'xxx',\n    age:0,\n    sex:false,\n    a:'',\n    b:null,\n    c:undefined,\n    f:{\n        name:'333',\n        d:''\n    },\n    list:[\n        {name:'xx',list:[0,1,2]},\n        false,\n        123\n    ]\n}\nlet obj2 = {\n    name:'xxx',\n    age:0,\n    sex:false,\n    a:'',\n    b:null,\n    c:undefined,\n    f:{\n        name:'333',\n        d:''\n    },\n    list:[\n        {name:'xx',list:[0,1,4]},\n        false,\n        123\n    ]\n}\nexpect(Utils.isEqual(obj,obj1)).to.be.true\nexpect(Utils.isEqual(obj,obj2)).to.be.false\ndone()",
              "err": {},
              "uuid": "100a1b43-bfc2-4fa4-ae30-5f56120527d8",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "数组去重，值包括基本类型和对象类型 uniqueArray",
              "fullTitle": "func 数组去重，值包括基本类型和对象类型 uniqueArray",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.uniqueArray([{name:'a'},{name:'a'},{name:'b'},1,1,2])).to.deep.equal([{name:'a'},{name:'b'},1,2])\nexpect(Utils.uniqueArray([{name:'a',list:[1,2],f:false},{name:'a',list:[1,2],f:false},{name:'b'}])).to.deep.equal([{name:'a',list:[1,2],f:false},{name:'b'}])\nexpect(Utils.uniqueArray([false,false,true,true,0,0,null,null,undefined,undefined])).to.deep.equal([false,true,0,null,undefined])\nexpect(Utils.uniqueArray(123)).to.be.equal(undefined)\ndone()",
              "err": {},
              "uuid": "abb0ee53-bbf9-486c-a385-76471b988074",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "线程睡眠 sleep",
              "fullTitle": "func 线程睡眠 sleep",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let beginTime = new Date().getTime();\nUtils.sleep(1000).then(()=>{\n    let time =  new Date().getTime() - beginTime;\n    expect(time).to.be.within(1000, 1100)\n})\ndone()",
              "err": {},
              "uuid": "05d79a60-1113-42d8-8209-d229cafa2b0f",
              "parentUUID": "39976473-9d43-4b20-a58f-ee03c8ea39e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4b230bc-9392-4d1b-bb03-2ec98e333ee0",
            "8e9e6231-01dd-4411-9304-67f9e21466d2",
            "2336770d-9a9b-4ef2-b992-595c6d16ddc4",
            "59b0fe8d-8a97-411c-a277-a97e878d8c69",
            "313b6139-c39c-4670-b70d-f256d67ae003",
            "d89a4e6a-6ec7-49df-a36e-dd3af6139648",
            "100a1b43-bfc2-4fa4-ae30-5f56120527d8",
            "abb0ee53-bbf9-486c-a385-76471b988074",
            "05d79a60-1113-42d8-8209-d229cafa2b0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6011,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
          "title": "number",
          "fullFile": "E:\\code\\js-util-func\\test\\number.test.js",
          "file": "\\test\\number.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "金额千分化 moneyThousandFormat",
              "fullTitle": "number 金额千分化 moneyThousandFormat",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.moneyThousandFormat('9',0)).to.equal('9');\nexpect(Utils.moneyThousandFormat(9)).to.equal('9');\nexpect(Utils.moneyThousandFormat(99)).to.equal('99');\nexpect(Utils.moneyThousandFormat(999)).to.equal('999');\nexpect(Utils.moneyThousandFormat(9999)).to.equal('9,999');\nexpect(Utils.moneyThousandFormat(9.355, 2)).to.equal('9.36');\nexpect(Utils.moneyThousandFormat(99.355, 2)).to.equal('99.36');\nexpect(Utils.moneyThousandFormat(9999.355, 2)).to.equal('9,999.36');\ndone()",
              "err": {},
              "uuid": "d4e8b34e-8188-4b29-8593-0cf5453af787",
              "parentUUID": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "四舍五入 toFixed",
              "fullTitle": "number 四舍五入 toFixed",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.toFixed('1.2345',2)).to.equal(1.23)\nexpect(Utils.toFixed(1.2345,2)).to.equal(1.23)\nexpect(Utils.toFixed(1.2355,2)).to.equal(1.24)\nexpect(Utils.toFixed(1.23)).to.equal(1)\nexpect(Utils.toFixed(1.23,-1)).to.equal(1.23)\ndone()",
              "err": {},
              "uuid": "6914dd21-7cb0-4812-a1ab-7d948d7472ff",
              "parentUUID": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "数值前补零 numAddZero",
              "fullTitle": "number 数值前补零 numAddZero",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.numAddZero('9',2)).to.equal('09')\nexpect(Utils.numAddZero(9,2)).to.equal('09')\nexpect(Utils.numAddZero(9,3)).to.equal('009')\nexpect(Utils.numAddZero(9,1)).to.equal('9')\nexpect(Utils.numAddZero(9,0)).to.equal('9')\nexpect(Utils.numAddZero(9,-1)).to.equal('9')\nexpect(Utils.numAddZero(9.9)).to.equal('9.9')\nexpect(Utils.numAddZero(9.9,2)).to.equal('09.9')\nexpect(Utils.numAddZero(-9.9,2)).to.equal('-09.9')\ndone()",
              "err": {},
              "uuid": "e46e3b38-6266-40c5-8dc5-0776a20f2365",
              "parentUUID": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "浮点数末尾补零 0 floatAddZero",
              "fullTitle": "number 浮点数末尾补零 0 floatAddZero",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.floatAddZero('1.2',2)).to.equal('1.20')\nexpect(Utils.floatAddZero(1.2,2)).to.equal('1.20')\nexpect(Utils.floatAddZero(1.2,1)).to.equal('1.2')\nexpect(Utils.floatAddZero(1.2,0)).to.equal('1.2')\nexpect(Utils.floatAddZero(1.2)).to.equal('1.2')\nexpect(Utils.floatAddZero(-1.2,2)).to.equal('-1.20')\nexpect(Utils.floatAddZero(1.234,2)).to.equal('1.234')\nexpect(Utils.floatAddZero(1.234,2)).to.equal('1.234')\ndone()",
              "err": {},
              "uuid": "b34d6e4c-4859-4f25-a02d-da3988cd34e1",
              "parentUUID": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "保留小数点后n位，不进行四舍五入操作 splitPoint",
              "fullTitle": "number 保留小数点后n位，不进行四舍五入操作 splitPoint",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.splitPoint('1.235',2)).to.equal('1.23')\nexpect(Utils.splitPoint(1.235,2)).to.equal('1.23')\nexpect(Utils.splitPoint(1.234,1)).to.equal('1.2')\nexpect(Utils.splitPoint(1.234,0)).to.equal('1')\nexpect(Utils.splitPoint(1.234,-1)).to.equal('1.234')\ndone()",
              "err": {},
              "uuid": "08d29565-41c9-4099-8ab5-aa8fac67f7ae",
              "parentUUID": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "小数格式化成百分数 decimalToPercent",
              "fullTitle": "number 小数格式化成百分数 decimalToPercent",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.decimalToPercent('0.23')).to.equal('23')\nexpect(Utils.decimalToPercent(0.23)).to.equal('23')\nexpect(Utils.decimalToPercent(1.23)).to.equal('1.23')\nexpect(Utils.decimalToPercent(0.234)).to.equal('23.4')\nexpect(Utils.decimalToPercent(0.234,2)).to.equal('23.40')\nexpect(Utils.decimalToPercent(0.234,1)).to.equal('23.4')\ndone()",
              "err": {},
              "uuid": "db642653-aa84-46f9-8c2c-343857961d1f",
              "parentUUID": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "金额转大写 moneyUppercase",
              "fullTitle": "number 金额转大写 moneyUppercase",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.moneyUppercase('1.2')).to.equal('壹元贰角')\nexpect(Utils.moneyUppercase(1.2)).to.equal('壹元贰角')\nexpect(Utils.moneyUppercase(1.20)).to.equal('壹元贰角')\nexpect(Utils.moneyUppercase(999.99)).to.equal('玖佰玖拾玖元玖角玖分')\nexpect(Utils.moneyUppercase(9999999999.99)).to.equal('玖拾玖亿玖仟玖佰玖拾玖万玖仟玖佰玖拾玖元玖角玖分')\ndone()",
              "err": {},
              "uuid": "56e23d7f-3df3-4757-9977-45f91a9dfb21",
              "parentUUID": "4c03a26d-da81-4607-9c79-c0518b97f1bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4e8b34e-8188-4b29-8593-0cf5453af787",
            "6914dd21-7cb0-4812-a1ab-7d948d7472ff",
            "e46e3b38-6266-40c5-8dc5-0776a20f2365",
            "b34d6e4c-4859-4f25-a02d-da3988cd34e1",
            "08d29565-41c9-4099-8ab5-aa8fac67f7ae",
            "db642653-aa84-46f9-8c2c-343857961d1f",
            "56e23d7f-3df3-4757-9977-45f91a9dfb21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "66bf589f-b39a-4ec1-bbe8-050ae5b05521",
          "title": "string",
          "fullFile": "E:\\code\\js-util-func\\test\\string.test.js",
          "file": "\\test\\string.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "过滤字符串中的表情和空格 filterEmojiAndSpace",
              "fullTitle": "string 过滤字符串中的表情和空格 filterEmojiAndSpace",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.filterEmojiAndSpace('aa')).to.be.equal('aa')\ndone()",
              "err": {},
              "uuid": "8a48a515-2b35-4df0-a42a-8e8a4f81adcd",
              "parentUUID": "66bf589f-b39a-4ec1-bbe8-050ae5b05521",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "过滤字符串前后空格 trim",
              "fullTitle": "string 过滤字符串前后空格 trim",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.trim('aa')).to.be.equal('aa')\nexpect(Utils.trim('  aa')).to.be.equal('aa')\nexpect(Utils.trim('aa  ')).to.be.equal('aa')\nexpect(Utils.trim('  aa  ')).to.be.equal('aa')\nexpect(Utils.trim('a a')).to.be.equal('a a')\ndone()",
              "err": {},
              "uuid": "212b9a7d-c9a8-4387-962e-6edc8a71a981",
              "parentUUID": "66bf589f-b39a-4ec1-bbe8-050ae5b05521",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "翻转字符串 reversString",
              "fullTitle": "string 翻转字符串 reversString",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.reversString('abc')).to.be.equal('cba')\nexpect(Utils.reversString('')).to.be.equal('')\ndone()",
              "err": {},
              "uuid": "f63e3bef-1c28-4dca-9788-56c6b462525f",
              "parentUUID": "66bf589f-b39a-4ec1-bbe8-050ae5b05521",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "生成随机字符串 genRandomStr",
              "fullTitle": "string 生成随机字符串 genRandomStr",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(Utils.genRandomStr('5')).to.be.length(5)\nexpect(Utils.genRandomStr(5)).to.be.length(5)\nexpect(Utils.genRandomStr(0)).to.be.length(0)\nexpect(Utils.genRandomStr('')).to.be.length(0)\ndone()",
              "err": {},
              "uuid": "ed023a75-c39b-4175-b2aa-a39dbc798c64",
              "parentUUID": "66bf589f-b39a-4ec1-bbe8-050ae5b05521",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a48a515-2b35-4df0-a42a-8e8a4f81adcd",
            "212b9a7d-c9a8-4387-962e-6edc8a71a981",
            "f63e3bef-1c28-4dca-9788-56c6b462525f",
            "ed023a75-c39b-4175-b2aa-a39dbc798c64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "5.0.0"
    },
    "marge": {
      "options": {
        "reportDir": "./test_report/mocha/"
      },
      "version": "4.1.0"
    }
  }
}